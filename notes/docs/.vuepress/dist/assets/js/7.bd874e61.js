(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{175:function(e,o,r){"use strict";r.r(o);var v=r(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,o=e.$createElement,r=e._self._c||o;return r("div",{staticClass:"content"},[r("h3",{attrs:{id:"promise-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#promise-api","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise api")]),e._v(" "),r("blockquote",[r("p",[e._v("参考资料："),r("code",[e._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise")])])]),e._v(" "),r("ul",[r("li",[r("code",[e._v("Promise.all(iterable)")])])]),e._v(" "),r("blockquote",[r("p",[e._v("参数："),r("code",[e._v("iterable")]),e._v("，一个可迭代对象，如 "),r("code",[e._v("Array")]),e._v(" 或 "),r("code",[e._v("String")])])]),e._v(" "),r("blockquote",[r("p",[e._v("返回值：返回一个 "),r("code",[e._v("Promise")]),e._v(" 实例，此实例在 "),r("code",[e._v("iterable")]),e._v(" 参数内所有的 "),r("code",[e._v("promise")]),e._v(" 都完成("),r("code",[e._v("resolved")]),e._v(")或参数中不包含"),r("code",[e._v("promise")]),e._v("时回调完成；如果参数中"),r("code",[e._v("promise")]),e._v("有一个失败("),r("code",[e._v("rejected")]),e._v(")，此实例回调失败("),r("code",[e._v("reject")]),e._v(")，失败原因是第一个失败"),r("code",[e._v("promise")]),e._v("的结果")])]),e._v(" "),r("ul",[r("li",[r("code",[e._v("promise.race(iterable)")])])]),e._v(" "),r("blockquote",[r("p",[e._v("参数：同 "),r("code",[e._v("promise.all(iteralble)")])])]),e._v(" "),r("blockquote",[r("p",[e._v("返回值：返回一个promise，一旦迭代器中的某个promise解决或拒绝，就采用第一个promise的值作为它的值，从而异步地解析或拒绝。")])]),e._v(" "),r("ul",[r("li",[r("code",[e._v("Promise.resolve()")])]),e._v(" "),r("li",[r("code",[e._v("Promise.reject()")])])])])}],!1,null,null,null);o.default=_.exports}}]);